package tests

import (
	"context"
	"encoding/json"
	"github.com/go-testfixtures/testfixtures/v3"
	"github.com/stretchr/testify/require"
	"l0/internal/models"
	"l0/internal/repository"
	"testing"
)

func TestHackathonCaseRepos_CRUD(t *testing.T) {
	db, cleanup, err := setupPostgresContainer(context.Background())
	require.NoError(t, err)
	defer cleanup()

	// Подготовка загрузчика фикстур и их загрузка
	fixtures, err := testfixtures.New(
		testfixtures.Database(db.DB),
		testfixtures.Dialect("postgres"),
		testfixtures.Paths(
			"fixtures/orders/orders.yml",
		),
	)
	require.NoError(t, err, "Ошибка при создании загрузчика фикстур")
	err = fixtures.Load()
	require.NoError(t, err, "Ошибка при загрузке фикстур")

	orderRepo := repository.InitOrderRepository(db)

	testDataCreate := models.Order{
		ID:   "a563fqa7b2b84b4test",
		Data: json.RawMessage{0x7b, 0x22, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x20, 0x22, 0x57, 0x42, 0x49, 0x4c, 0x22, 0x2c, 0x20, 0x22, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x7b, 0x22, 0x72, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x61, 0x62, 0x34, 0x32, 0x31, 0x39, 0x30, 0x38, 0x37, 0x61, 0x37, 0x36, 0x34, 0x61, 0x65, 0x30, 0x62, 0x74, 0x65, 0x73, 0x74, 0x22, 0x2c, 0x20, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x4d, 0x61, 0x73, 0x63, 0x61, 0x72, 0x61, 0x73, 0x22, 0x2c, 0x20, 0x22, 0x73, 0x61, 0x6c, 0x65, 0x22, 0x3a, 0x20, 0x33, 0x30, 0x2c, 0x20, 0x22, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x30, 0x22, 0x2c, 0x20, 0x22, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x56, 0x69, 0x76, 0x69, 0x65, 0x6e, 0x6e, 0x65, 0x20, 0x53, 0x61, 0x62, 0x6f, 0x22, 0x2c, 0x20, 0x22, 0x6e, 0x6d, 0x5f, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x32, 0x33, 0x38, 0x39, 0x32, 0x31, 0x32, 0x2c, 0x20, 0x22, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x3a, 0x20, 0x34, 0x35, 0x33, 0x2c, 0x20, 0x22, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3a, 0x20, 0x32, 0x30, 0x31, 0x2c, 0x20, 0x22, 0x63, 0x68, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x39, 0x39, 0x33, 0x34, 0x39, 0x33, 0x30, 0x2c, 0x20, 0x22, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x3a, 0x20, 0x33, 0x31, 0x37, 0x2c, 0x20, 0x22, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x3a, 0x20, 0x22, 0x57, 0x42, 0x49, 0x4c, 0x4d, 0x54, 0x45, 0x53, 0x54, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x22, 0x7d, 0x5d, 0x2c, 0x20, 0x22, 0x73, 0x6d, 0x5f, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x39, 0x39, 0x2c, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x72, 0x75, 0x22, 0x2c, 0x20, 0x22, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x3a, 0x20, 0x7b, 0x22, 0x62, 0x61, 0x6e, 0x6b, 0x22, 0x3a, 0x20, 0x22, 0x62, 0x65, 0x74, 0x61, 0x22, 0x2c, 0x20, 0x22, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3a, 0x20, 0x31, 0x39, 0x38, 0x34, 0x2c, 0x20, 0x22, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x3a, 0x20, 0x22, 0x52, 0x55, 0x42, 0x22, 0x2c, 0x20, 0x22, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x3a, 0x20, 0x22, 0x77, 0x62, 0x70, 0x61, 0x79, 0x22, 0x2c, 0x20, 0x22, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x65, 0x65, 0x22, 0x3a, 0x20, 0x30, 0x2c, 0x20, 0x22, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x74, 0x22, 0x3a, 0x20, 0x31, 0x36, 0x33, 0x37, 0x39, 0x30, 0x37, 0x37, 0x32, 0x37, 0x2c, 0x20, 0x22, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x22, 0x2c, 0x20, 0x22, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x3a, 0x20, 0x34, 0x38, 0x34, 0x2c, 0x20, 0x22, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x20, 0x22, 0x61, 0x35, 0x36, 0x33, 0x66, 0x71, 0x61, 0x37, 0x62, 0x32, 0x62, 0x38, 0x34, 0x62, 0x34, 0x74, 0x65, 0x73, 0x74, 0x22, 0x2c, 0x20, 0x22, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x22, 0x3a, 0x20, 0x31, 0x35, 0x30, 0x30, 0x7d, 0x2c, 0x20, 0x22, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x22, 0x3a, 0x20, 0x7b, 0x22, 0x7a, 0x69, 0x70, 0x22, 0x3a, 0x20, 0x22, 0x32, 0x31, 0x34, 0x38, 0x38, 0x30, 0x39, 0x22, 0x2c, 0x20, 0x22, 0x63, 0x69, 0x74, 0x79, 0x22, 0x3a, 0x20, 0x22, 0x4b, 0x69, 0x72, 0x79, 0x61, 0x74, 0x20, 0x4d, 0x6f, 0x5a, 0x6b, 0x69, 0x6e, 0x22, 0x2c, 0x20, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x54, 0x65, 0x73, 0x74, 0x20, 0x54, 0x65, 0x73, 0x74, 0x6f, 0x76, 0x20, 0x32, 0x22, 0x2c, 0x20, 0x22, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x3a, 0x20, 0x22, 0x74, 0x65, 0x73, 0x74, 0x40, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x22, 0x2c, 0x20, 0x22, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x2b, 0x31, 0x33, 0x33, 0x37, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x22, 0x2c, 0x20, 0x22, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x20, 0x22, 0x4b, 0x72, 0x61, 0x69, 0x6f, 0x74, 0x22, 0x2c, 0x20, 0x22, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x3a, 0x20, 0x22, 0x50, 0x6c, 0x6f, 0x73, 0x68, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x72, 0x61, 0x20, 0x31, 0x31, 0x22, 0x7d, 0x2c, 0x20, 0x22, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6b, 0x65, 0x79, 0x22, 0x3a, 0x20, 0x22, 0x39, 0x22, 0x2c, 0x20, 0x22, 0x6f, 0x6f, 0x66, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x32, 0x22, 0x2c, 0x20, 0x22, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x61, 0x35, 0x36, 0x33, 0x66, 0x71, 0x61, 0x37, 0x62, 0x32, 0x62, 0x38, 0x34, 0x62, 0x34, 0x74, 0x65, 0x73, 0x74, 0x22, 0x2c, 0x20, 0x22, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x74, 0x65, 0x73, 0x74, 0x22, 0x2c, 0x20, 0x22, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x32, 0x30, 0x32, 0x31, 0x2d, 0x31, 0x31, 0x2d, 0x32, 0x36, 0x54, 0x30, 0x36, 0x3a, 0x32, 0x32, 0x3a, 0x31, 0x39, 0x5a, 0x22, 0x2c, 0x20, 0x22, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x3a, 0x20, 0x22, 0x57, 0x42, 0x49, 0x4c, 0x4d, 0x54, 0x45, 0x53, 0x54, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x22, 0x2c, 0x20, 0x22, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x6d, 0x65, 0x65, 0x73, 0x74, 0x22, 0x2c, 0x20, 0x22, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x22, 0x7d},
	}
	t.Run("Create order", func(t *testing.T) {
		err := orderRepo.Create(context.Background(), testDataCreate)
		require.NoError(t, err)
	})

	testDataExpected := []models.Order{
		{
			ID:   "b563feb7b2b84b6test",
			Data: json.RawMessage{0x7b, 0x22, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x20, 0x22, 0x57, 0x42, 0x49, 0x4c, 0x22, 0x2c, 0x20, 0x22, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x7b, 0x22, 0x72, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x61, 0x62, 0x34, 0x32, 0x31, 0x39, 0x30, 0x38, 0x37, 0x61, 0x37, 0x36, 0x34, 0x61, 0x65, 0x30, 0x62, 0x74, 0x65, 0x73, 0x74, 0x22, 0x2c, 0x20, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x4d, 0x61, 0x73, 0x63, 0x61, 0x72, 0x61, 0x73, 0x22, 0x2c, 0x20, 0x22, 0x73, 0x61, 0x6c, 0x65, 0x22, 0x3a, 0x20, 0x33, 0x30, 0x2c, 0x20, 0x22, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x30, 0x22, 0x2c, 0x20, 0x22, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x56, 0x69, 0x76, 0x69, 0x65, 0x6e, 0x6e, 0x65, 0x20, 0x53, 0x61, 0x62, 0x6f, 0x22, 0x2c, 0x20, 0x22, 0x6e, 0x6d, 0x5f, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x32, 0x33, 0x38, 0x39, 0x32, 0x31, 0x32, 0x2c, 0x20, 0x22, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x3a, 0x20, 0x34, 0x35, 0x33, 0x2c, 0x20, 0x22, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3a, 0x20, 0x32, 0x30, 0x32, 0x2c, 0x20, 0x22, 0x63, 0x68, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x39, 0x39, 0x33, 0x34, 0x39, 0x33, 0x30, 0x2c, 0x20, 0x22, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x3a, 0x20, 0x33, 0x31, 0x37, 0x2c, 0x20, 0x22, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x3a, 0x20, 0x22, 0x57, 0x42, 0x49, 0x4c, 0x4d, 0x54, 0x45, 0x53, 0x54, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x22, 0x7d, 0x5d, 0x2c, 0x20, 0x22, 0x73, 0x6d, 0x5f, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x39, 0x39, 0x2c, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x65, 0x6e, 0x22, 0x2c, 0x20, 0x22, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x3a, 0x20, 0x7b, 0x22, 0x62, 0x61, 0x6e, 0x6b, 0x22, 0x3a, 0x20, 0x22, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x22, 0x2c, 0x20, 0x22, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3a, 0x20, 0x31, 0x38, 0x31, 0x37, 0x2c, 0x20, 0x22, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x3a, 0x20, 0x22, 0x55, 0x53, 0x44, 0x22, 0x2c, 0x20, 0x22, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x3a, 0x20, 0x22, 0x77, 0x62, 0x70, 0x61, 0x79, 0x22, 0x2c, 0x20, 0x22, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x65, 0x65, 0x22, 0x3a, 0x20, 0x30, 0x2c, 0x20, 0x22, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x74, 0x22, 0x3a, 0x20, 0x31, 0x36, 0x33, 0x37, 0x39, 0x30, 0x37, 0x37, 0x32, 0x37, 0x2c, 0x20, 0x22, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x22, 0x2c, 0x20, 0x22, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x3a, 0x20, 0x33, 0x31, 0x37, 0x2c, 0x20, 0x22, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x20, 0x22, 0x62, 0x35, 0x36, 0x33, 0x66, 0x65, 0x62, 0x37, 0x62, 0x32, 0x62, 0x38, 0x34, 0x62, 0x36, 0x74, 0x65, 0x73, 0x74, 0x22, 0x2c, 0x20, 0x22, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x22, 0x3a, 0x20, 0x31, 0x35, 0x30, 0x30, 0x7d, 0x2c, 0x20, 0x22, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x22, 0x3a, 0x20, 0x7b, 0x22, 0x7a, 0x69, 0x70, 0x22, 0x3a, 0x20, 0x22, 0x32, 0x36, 0x33, 0x39, 0x38, 0x30, 0x39, 0x22, 0x2c, 0x20, 0x22, 0x63, 0x69, 0x74, 0x79, 0x22, 0x3a, 0x20, 0x22, 0x4b, 0x69, 0x72, 0x79, 0x61, 0x74, 0x20, 0x4d, 0x6f, 0x7a, 0x6b, 0x69, 0x6e, 0x22, 0x2c, 0x20, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x54, 0x65, 0x73, 0x74, 0x20, 0x54, 0x65, 0x73, 0x74, 0x6f, 0x76, 0x22, 0x2c, 0x20, 0x22, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x3a, 0x20, 0x22, 0x74, 0x65, 0x73, 0x74, 0x40, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x22, 0x2c, 0x20, 0x22, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x2b, 0x39, 0x37, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x22, 0x2c, 0x20, 0x22, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x20, 0x22, 0x4b, 0x72, 0x61, 0x69, 0x6f, 0x74, 0x22, 0x2c, 0x20, 0x22, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x3a, 0x20, 0x22, 0x50, 0x6c, 0x6f, 0x73, 0x68, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x72, 0x61, 0x20, 0x31, 0x35, 0x22, 0x7d, 0x2c, 0x20, 0x22, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6b, 0x65, 0x79, 0x22, 0x3a, 0x20, 0x22, 0x39, 0x22, 0x2c, 0x20, 0x22, 0x6f, 0x6f, 0x66, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x31, 0x22, 0x2c, 0x20, 0x22, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x62, 0x35, 0x36, 0x33, 0x66, 0x65, 0x62, 0x37, 0x62, 0x32, 0x62, 0x38, 0x34, 0x62, 0x36, 0x74, 0x65, 0x73, 0x74, 0x22, 0x2c, 0x20, 0x22, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x74, 0x65, 0x73, 0x74, 0x22, 0x2c, 0x20, 0x22, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x32, 0x30, 0x32, 0x31, 0x2d, 0x31, 0x31, 0x2d, 0x32, 0x36, 0x54, 0x30, 0x36, 0x3a, 0x32, 0x32, 0x3a, 0x31, 0x39, 0x5a, 0x22, 0x2c, 0x20, 0x22, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x3a, 0x20, 0x22, 0x57, 0x42, 0x49, 0x4c, 0x4d, 0x54, 0x45, 0x53, 0x54, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x22, 0x2c, 0x20, 0x22, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x6d, 0x65, 0x65, 0x73, 0x74, 0x22, 0x2c, 0x20, 0x22, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x22, 0x7d},
		},
		{
			ID:   "a563fqa7b2b84b4test",
			Data: json.RawMessage{0x7b, 0x22, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x20, 0x22, 0x57, 0x42, 0x49, 0x4c, 0x22, 0x2c, 0x20, 0x22, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x3a, 0x20, 0x5b, 0x7b, 0x22, 0x72, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x61, 0x62, 0x34, 0x32, 0x31, 0x39, 0x30, 0x38, 0x37, 0x61, 0x37, 0x36, 0x34, 0x61, 0x65, 0x30, 0x62, 0x74, 0x65, 0x73, 0x74, 0x22, 0x2c, 0x20, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x4d, 0x61, 0x73, 0x63, 0x61, 0x72, 0x61, 0x73, 0x22, 0x2c, 0x20, 0x22, 0x73, 0x61, 0x6c, 0x65, 0x22, 0x3a, 0x20, 0x33, 0x30, 0x2c, 0x20, 0x22, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x30, 0x22, 0x2c, 0x20, 0x22, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x56, 0x69, 0x76, 0x69, 0x65, 0x6e, 0x6e, 0x65, 0x20, 0x53, 0x61, 0x62, 0x6f, 0x22, 0x2c, 0x20, 0x22, 0x6e, 0x6d, 0x5f, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x32, 0x33, 0x38, 0x39, 0x32, 0x31, 0x32, 0x2c, 0x20, 0x22, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x3a, 0x20, 0x34, 0x35, 0x33, 0x2c, 0x20, 0x22, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3a, 0x20, 0x32, 0x30, 0x31, 0x2c, 0x20, 0x22, 0x63, 0x68, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x39, 0x39, 0x33, 0x34, 0x39, 0x33, 0x30, 0x2c, 0x20, 0x22, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x3a, 0x20, 0x33, 0x31, 0x37, 0x2c, 0x20, 0x22, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x3a, 0x20, 0x22, 0x57, 0x42, 0x49, 0x4c, 0x4d, 0x54, 0x45, 0x53, 0x54, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x22, 0x7d, 0x5d, 0x2c, 0x20, 0x22, 0x73, 0x6d, 0x5f, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x39, 0x39, 0x2c, 0x20, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x72, 0x75, 0x22, 0x2c, 0x20, 0x22, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x3a, 0x20, 0x7b, 0x22, 0x62, 0x61, 0x6e, 0x6b, 0x22, 0x3a, 0x20, 0x22, 0x62, 0x65, 0x74, 0x61, 0x22, 0x2c, 0x20, 0x22, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3a, 0x20, 0x31, 0x39, 0x38, 0x34, 0x2c, 0x20, 0x22, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x3a, 0x20, 0x22, 0x52, 0x55, 0x42, 0x22, 0x2c, 0x20, 0x22, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x3a, 0x20, 0x22, 0x77, 0x62, 0x70, 0x61, 0x79, 0x22, 0x2c, 0x20, 0x22, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x65, 0x65, 0x22, 0x3a, 0x20, 0x30, 0x2c, 0x20, 0x22, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x74, 0x22, 0x3a, 0x20, 0x31, 0x36, 0x33, 0x37, 0x39, 0x30, 0x37, 0x37, 0x32, 0x37, 0x2c, 0x20, 0x22, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x22, 0x2c, 0x20, 0x22, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x3a, 0x20, 0x34, 0x38, 0x34, 0x2c, 0x20, 0x22, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x20, 0x22, 0x61, 0x35, 0x36, 0x33, 0x66, 0x71, 0x61, 0x37, 0x62, 0x32, 0x62, 0x38, 0x34, 0x62, 0x34, 0x74, 0x65, 0x73, 0x74, 0x22, 0x2c, 0x20, 0x22, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x22, 0x3a, 0x20, 0x31, 0x35, 0x30, 0x30, 0x7d, 0x2c, 0x20, 0x22, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x22, 0x3a, 0x20, 0x7b, 0x22, 0x7a, 0x69, 0x70, 0x22, 0x3a, 0x20, 0x22, 0x32, 0x31, 0x34, 0x38, 0x38, 0x30, 0x39, 0x22, 0x2c, 0x20, 0x22, 0x63, 0x69, 0x74, 0x79, 0x22, 0x3a, 0x20, 0x22, 0x4b, 0x69, 0x72, 0x79, 0x61, 0x74, 0x20, 0x4d, 0x6f, 0x5a, 0x6b, 0x69, 0x6e, 0x22, 0x2c, 0x20, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x54, 0x65, 0x73, 0x74, 0x20, 0x54, 0x65, 0x73, 0x74, 0x6f, 0x76, 0x20, 0x32, 0x22, 0x2c, 0x20, 0x22, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x3a, 0x20, 0x22, 0x74, 0x65, 0x73, 0x74, 0x40, 0x67, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x22, 0x2c, 0x20, 0x22, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x2b, 0x31, 0x33, 0x33, 0x37, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x22, 0x2c, 0x20, 0x22, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x20, 0x22, 0x4b, 0x72, 0x61, 0x69, 0x6f, 0x74, 0x22, 0x2c, 0x20, 0x22, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x3a, 0x20, 0x22, 0x50, 0x6c, 0x6f, 0x73, 0x68, 0x61, 0x64, 0x20, 0x4d, 0x69, 0x72, 0x61, 0x20, 0x31, 0x31, 0x22, 0x7d, 0x2c, 0x20, 0x22, 0x73, 0x68, 0x61, 0x72, 0x64, 0x6b, 0x65, 0x79, 0x22, 0x3a, 0x20, 0x22, 0x39, 0x22, 0x2c, 0x20, 0x22, 0x6f, 0x6f, 0x66, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x32, 0x22, 0x2c, 0x20, 0x22, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x61, 0x35, 0x36, 0x33, 0x66, 0x71, 0x61, 0x37, 0x62, 0x32, 0x62, 0x38, 0x34, 0x62, 0x34, 0x74, 0x65, 0x73, 0x74, 0x22, 0x2c, 0x20, 0x22, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x74, 0x65, 0x73, 0x74, 0x22, 0x2c, 0x20, 0x22, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x3a, 0x20, 0x22, 0x32, 0x30, 0x32, 0x31, 0x2d, 0x31, 0x31, 0x2d, 0x32, 0x36, 0x54, 0x30, 0x36, 0x3a, 0x32, 0x32, 0x3a, 0x31, 0x39, 0x5a, 0x22, 0x2c, 0x20, 0x22, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x3a, 0x20, 0x22, 0x57, 0x42, 0x49, 0x4c, 0x4d, 0x54, 0x45, 0x53, 0x54, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x22, 0x2c, 0x20, 0x22, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x6d, 0x65, 0x65, 0x73, 0x74, 0x22, 0x2c, 0x20, 0x22, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x22, 0x7d},
		},
	}

	t.Run("Get orders", func(t *testing.T) {
		orders, err := orderRepo.GetAll(context.Background())
		require.NoError(t, err)
		require.Equal(t, testDataExpected, orders)
	})
}
