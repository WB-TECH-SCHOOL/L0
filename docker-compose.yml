services:
  app:
    container_name: app
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "80:80"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
      nats:
        condition: service_started
    volumes:
      - ./data/app:/app/cmd/log
    restart: on-failure

  postgres:
    image: postgres:15
    ports:
      - "${DB_PORT}:5432"
    container_name: postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${DB_NAME} -U ${DB_USER} -h ${DB_HOST} -p ${DB_PORT}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  migrate:
    image: migrate/migrate
    env_file:
      - .env
    command: [
      "-path", "/migrations",
      "-database", "postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable",
      "up"
    ]
    volumes:
      - ./migrations:/migrations
    depends_on:
      postgres:
        condition: service_healthy

  nats:
    image: nats:latest
    env_file:
      - .env
    command: ["-js", "-D", "-m", "8222"]
    ports:
      - "${NATS_PORT}:4222"
      - "8222:8222"
